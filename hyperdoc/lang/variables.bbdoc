
A variable is a 'storage location' that contains values that change while your program executes. Variables may be of any basic data type, or a custom type.

A variable's type is determined by a special character that follows its identifier.These special characters are called 'type tags' and are: 

\verb|%| For integer variables

\verb|#| For floating point variables

\verb|$| For string variables

\verb|.|typename For custom type variables

Here are some examples of valid variables: 

.code
Score%
Lives% 
x_speed# 
y_speed# 
name$ 
title$ 
ali.Alien 
player.Player
.endcode

The type tag only needs to be added the first time you use a variable, after that you can leave the type tag off if you wish. If you don't supply a type tag the first time a variable is used, the variable defaults to an integer. 

It is illegal to use the same variable name with a different type. For example, if you already have an integer variable called 'name\%', it is illegal to also have a string variable called 'name\$'

The \verb|=| assignment operator is used to assign a value to a variable. For example:
.code
score=0 
.endcode
...assigns the value 0 to the integer variable \verb|score|.

Variables may also be either local or global. This refers to where in a program a variable may be used.  Global variables can be used from anywhere in the program, while local variables can only be used within the function they are created in.

The \verb|Global| keyword is used to define one or more global variables. For example: 
.code
Global Score=0,Lives=3,Player_up=1 
.endcode
Similarly, \verb|Local| is used to define local variables:
.code
Local temp_x=x,temp_y=y 
.endcode
If you use a variable without defining it as either local or global, it defaults to being local. 
